name: iOS starter workflow

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PLATFORM: ${{ 'iOS Simulator' }}
  PROJECT: ${{ 'BullsEye.xcodeproj' }}
  SCHEME: ${{ 'BullsEye' }}
  ARCHIVE_PATH:  ${{ 'xcbuild/BullsEye.xcarchive' }}

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Display XCode Path for debug
        run: |
          xcode-select -p  
      - name: Build For Testing
        run: |
          # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          xcodebuild \
          -project $PROJECT \
          -scheme $SCHEME \
          -sdk iphonesimulator \
          -destination "platform=$PLATFORM,name=$device" \
          build-for-testing
      - name: Test
        run: |
          # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          xcodebuild \
          -project $PROJECT \
          -scheme $SCHEME \
          -sdk iphonesimulator \
          -destination "platform=$PLATFORM,name=$device" \
          test-without-building
      # - name: Build For Release
      #   run: |
      #      xcodebuild \
      #     -project ${{ PROJECT }} \
      #     -scheme ${{ SCHEME }} \
      #     -configuration Release \
      #     -sdk iphoneos \
      #     -archivePath ${{ ARCHIVE_PATH }}
      #     archive
         

      
